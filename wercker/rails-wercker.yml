# This references the default Ruby container from
# the Docker Hub.
# https://registry.hub.docker.com/_/ruby/
# If you want to use a specific version you would use a tag:
box: ruby:2.3.1
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
services:
  # http://devcenter.wercker.com/docs/services/postgresql.html
  - id: postgres
    env:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user   # optional
      POSTGRES_DB: test     # optional

  # - mongo
  # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - bundle-install
    - script:
        name: export DATABASE_URL
        code: export DATABASE_URL=postgres://$POSTGRES_ENV_POSTGRES_USER:$POSTGRES_ENV_POSTGRES_PASSWORD@$POSTGRES_PORT_5432_TCP_ADDR:$POSTGRES_PORT_5432_TCP_PORT/$POSTGRES_ENV_POSTGRES_DB
    - script:
        name: env
        code: env
    - script:
        name: create db
        code: bundle exec rake db:create RAILS_ENV=test
    - script:
        name: migrate db
        code: bundle exec rake db:migrate RAILS_ENV=test
    - script:
        name: rake test
        code: bundle exec rake test RAILS_ENV=test
    # - script:
    #     name: drop db
    #     code: bundle exec rake db:drop RAILS_ENV=test
        
deploy:
  steps:
    - heroku-deploy:
        keep-repository: true
        run: rake db:migrate
